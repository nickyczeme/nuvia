# Generated by Django 5.1.7 on 2025-03-29 17:19

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Usuario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("dni", models.PositiveIntegerField(unique=True)),
                ("nombre", models.CharField(blank=True, max_length=100)),
                ("apellido", models.CharField(blank=True, max_length=100)),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, null=True, unique=True
                    ),
                ),
                ("is_staff", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Anticonceptivo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tipo", models.CharField(max_length=100)),
                ("marca", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="Doctor",
            fields=[
                (
                    "usuario_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "firma_digital",
                    models.FileField(
                        blank=True, null=True, upload_to="firmas_doctores/"
                    ),
                ),
                (
                    "token_dispositivo",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "matricula",
                    models.CharField(blank=True, max_length=50, null=True, unique=True),
                ),
                (
                    "estado_matricula",
                    models.CharField(
                        choices=[("vigente", "Vigente"), ("vencido", "Vencido")],
                        default="vigente",
                        max_length=10,
                    ),
                ),
                ("profesion", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "especialidad",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "domicilio_atencion",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("core.usuario",),
        ),
        migrations.CreateModel(
            name="Paciente",
            fields=[
                (
                    "usuario_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "obra_social",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("credencial", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "token_dispositivo",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("fecha_nacimiento", models.DateField(blank=True, null=True)),
                (
                    "sexo",
                    models.CharField(
                        blank=True,
                        choices=[("M", "Masculino"), ("F", "Femenino"), ("O", "Otro")],
                        max_length=20,
                        null=True,
                    ),
                ),
                ("fecha_de_inicio_periodo", models.DateField(blank=True, null=True)),
                (
                    "cantidad_de_cajas",
                    models.IntegerField(
                        default=3,
                        help_text="Cantidad de cajas (1-3)",
                        validators=[
                            django.core.validators.MinValueValidator(
                                1, message="La cantidad de cajas debe ser mayor a 0"
                            ),
                            django.core.validators.MaxValueValidator(
                                3, message="La cantidad de cajas no puede ser mayor a 3"
                            ),
                        ],
                    ),
                ),
                (
                    "anticonceptivo",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="pacientes",
                        to="core.anticonceptivo",
                    ),
                ),
                (
                    "doctor_asignado",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pacientes",
                        to="core.doctor",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("core.usuario",),
        ),
        migrations.CreateModel(
            name="SolicitudReceta",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "cantidad_anticonceptivos",
                    models.IntegerField(
                        default=1,
                        help_text="Cantidad de anticonceptivos (1-3)",
                        validators=[
                            django.core.validators.MinValueValidator(
                                1,
                                message="La cantidad de anticonceptivos debe ser mayor a 0",
                            ),
                            django.core.validators.MaxValueValidator(
                                3,
                                message="La cantidad de anticonceptivos no puede ser mayor a 3",
                            ),
                        ],
                    ),
                ),
                ("fecha", models.DateTimeField(auto_now_add=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pendiente", "Pendiente"),
                            ("aceptado", "Aceptado"),
                            ("rechazado", "Rechazado"),
                        ],
                        default="pendiente",
                        max_length=10,
                    ),
                ),
                (
                    "archivo",
                    models.FileField(
                        blank=True, null=True, upload_to="recetas_adjuntas/"
                    ),
                ),
                (
                    "codigo_barras",
                    models.CharField(
                        blank=True, max_length=100, null=True, unique=True
                    ),
                ),
                (
                    "anticonceptivo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="solicitudes_recetas",
                        to="core.anticonceptivo",
                    ),
                ),
                (
                    "doctor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="solicitudes_recetas",
                        to="core.doctor",
                    ),
                ),
                (
                    "paciente",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="solicitudes_recetas",
                        to="core.paciente",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SolicitudAmistad",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fecha", models.DateTimeField(auto_now_add=True)),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("pendiente", "Pendiente"),
                            ("aceptado", "Aceptado"),
                            ("rechazado", "Rechazado"),
                        ],
                        default="pendiente",
                        max_length=10,
                    ),
                ),
                (
                    "anticonceptivo",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="solicitudes_amistad",
                        to="core.anticonceptivo",
                    ),
                ),
                (
                    "doctor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="solicitudes_amistad",
                        to="core.doctor",
                    ),
                ),
                (
                    "paciente",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="solicitudes_amistad",
                        to="core.paciente",
                    ),
                ),
            ],
        ),
    ]
